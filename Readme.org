* Rusticify

** Screenshot
[[file:rusticify.png]]

** Inspiration
I use lucid.app at work quite often to brainstorm ideas with colleagues or even solo.
I often share the ideas via sharing lucid.app diagrams or just screenshot of it. I don't use banch of features there. 
Just simple rectangles, arrows, why not build something similiar in rust, for the sake of learning rust and having some *fun*?

** What's implemented
- ✅ add/remove rectangle  
- ✅ rectangle resizing  
- ✅ rectangle repositioning  
- ✅ wrapped text inside rectangles  
- ✅ paste screenshot from clipboard  
- ✅ connect nodes with arrows  
- ✅ make app snapshot in memory and load from it (command + s[l])   
- ✅ save app state to file and load from it (command + shift + s[l] or Save[Load] button) 
- ✅ change background color of rectangle  
- ✅ move rectangle to front/back  
- ✅ positioning text in rectangle
- ✅ introduce tabs
- ✅ buttons to cut/copy/paste text in rectangle and open all links in rectangle

** Run

Tested only on MacOS, should work on Linux and Windows as well (keyboard shortcuts should be adjusted)

#+BEGIN_SRC sh
cargo r 
#+END_SRC

It runs on wasm as well, but it's not very useful, since it doesn't have clipboard/file system features, also only landscape mode is supported.

#+BEGIN_SRC sh
cargo r --target wasm32-unknown-unknown --release
wasm-server-runner  target/wasm32-unknown-unknown/release/rusticify.wasm
#+END_SRC

** Pre-commit actions

#+BEGIN_SRC
cargo fmt
cargo clippy --fix --allow-staged -- -A clippy::type_complexity
#+END_SRC

* Possible improvements
- Publish crate
- Add buttong to make a screenshot of main area and copy it to clipboard (see https://github.com/bevyengine/bevy/pull/7163) 
- Add app icon (make sure that it's embedded in release binary)
- Arrows parallel mode (see lucid.app)
- Create global button label instead of changing color in every system (refactoring)
- Refactor passing "font" to every text field via asset_server, to have global handle perhaps (refactoring)
- Improve popup window layout
- Add tagging/untagging of nodes
- Search by text / tags
- Accessibility improvements 
- Multiple nodes selection
- Improve text inside rectangle:
    + text selection
    + exectuble code inside rectangle
    + org/markdown support