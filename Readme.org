* I(nteractive)Chart

[[file:ichart.png]]

** Inspiration
I use lucid.app at work quite often to brainstorm ideas with colleagues or even solo.
I often share my ideas via sharing lucid.app diagrams or just screenshot of it. I don't use banch of features there. 
Just simple rectangles, arrows, why not build rust analog of it for the sake of learning rust and having some *fun*?

** What's implemented
- ability to add rectangle
- ability to re-size rectangle
- ability to move rectangles
- ability to type text in rectangles
- ability to paste screenshot from clipboard
- ability to connect nodes with arrows
- ability to make game snapshot in memory and load from it
- ability to save game state to file and load from it

** Next steps
- re-create arrows on load from ron file
- add redo

** Run (supported platforms: linux, macos, windows)

#+BEGIN_SRC sh
cargo r 
#+END_SRC

Wasm minimal support:

#+BEGIN_SRC sh
cargo r --target wasm32-unknown-unknown --release
wasm-server-runner  target/wasm32-unknown-unknown/release/ichart.wasm
#+END_SRC

** Pre-commit actions

#+BEGIN_SRC
cargo fmt
cargo clippy --fix --allow-staged
#+END_SRC

* Tasks to todo
- Add borders (once https://github.com/bevyengine/bevy/pull/7795 merged)
- Add separate panel for creating rectangles (control panel), use grid layout for it (once https://github.com/bevyengine/bevy/pull/8026  merged)
- Add button to change z-index of rectangle
- Have color pallete to change background color of rectangle
- Have two arrow mods: direct and parallel (see lucid.app) 
- Creation via moving from shapes panel (note: added button for now)
- Add "ctrl+a" to select text in rectangle
- Github auth, push gist to github
- Tabs of diagrams
- Make text inside rectangle smart wrapping (once https://github.com/bevyengine/bevy/pull/7761 merged)
- Tag systems for nodes and search (load gist files to memory and search, sync button)
- Delete entities functionality
- Proper cursor on typing
- Improve UI/UX, use lucid.app for inspiration
- Wasm executable code in rectangle
- Org support in rectangles
- Collaborative editing