* Rusticify
[[file:icon.png]]

** Screenshot
[[file:rusticify.png]]

** Inspiration
I use lucid.app at work quite often to brainstorm ideas with colleagues or even solo.
I often share my ideas via sharing lucid.app diagrams or just screenshot of it. I don't use banch of features there. 
Just simple rectangles, arrows, why not build rust analog of it for the sake of learning rust and having some *fun*?

** What's implemented
- ✅ add/remove rectangle  
- ✅ rectangle resizing  
- ✅ rectangle repositioning  
- ✅ text inside rectangles  
- ✅ paste screenshot from clipboard  
- ✅ connect nodes with arrows  
- ✅ make game snapshot in memory and load from it (command + s|l)   
- ✅ save game state to file and load from it (command + shift + s|l)  
- ✅ change background color of rectangle  
- ✅ move rectangle to front/back  
- [ ] tag/untag files
- [ ] positioning text in rectangle
- [ ] load from folder (switch between files)  
- [ ] search by text/tag  
- [ ] arrow parallel-lines drawing mode
- [ ] improve text inside rectangle

** Run (supported platforms: linux, macos, windows)

#+BEGIN_SRC sh
cargo r 
#+END_SRC

Wasm minimal support:

#+BEGIN_SRC sh
cargo r --target wasm32-unknown-unknown --release
wasm-server-runner  target/wasm32-unknown-unknown/release/rusticify.wasm
#+END_SRC

** Pre-commit actions

#+BEGIN_SRC
cargo fmt
cargo clippy --fix --allow-staged -- -A clippy::type_complexity
#+END_SRC

* Tasks to todo
- Add app icon (make sure that it's embedded in release binary)
- Create icons for buttons
- Multiple nodes selection
- Improve text inside rectangle:
    + text position
    + smart wrapping (see https://github.com/bevyengine/bevy/pull/7761)
    + text selection
    + links support
    + exectuble code inside rectangle
    + org/markdown support